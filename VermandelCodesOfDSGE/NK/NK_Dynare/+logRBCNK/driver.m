%
% Status : main Dynare file
%
% Warning : this file is generated automatically by Dynare
%           from model file (.mod)

clearvars -global
clear_persistent_variables(fileparts(which('dynare')), false)
tic0 = tic;
% Define global variables.
global M_ options_ oo_ estim_params_ bayestopt_ dataset_ dataset_info estimation_info
options_ = [];
M_.fname = 'logRBCNK';
M_.dynare_version = '6.1';
oo_.dynare_version = '6.1';
options_.dynare_version = '6.1';
%
% Some global variables initialization
%
global_initialization;
M_.exo_names = cell(3,1);
M_.exo_names_tex = cell(3,1);
M_.exo_names_long = cell(3,1);
M_.exo_names(1) = {'e_a'};
M_.exo_names_tex(1) = {'e\_a'};
M_.exo_names_long(1) = {'e_a'};
M_.exo_names(2) = {'e_g'};
M_.exo_names_tex(2) = {'e\_g'};
M_.exo_names_long(2) = {'e_g'};
M_.exo_names(3) = {'e_r'};
M_.exo_names_tex(3) = {'e\_r'};
M_.exo_names_long(3) = {'e_r'};
M_.endo_names = cell(12,1);
M_.endo_names_tex = cell(12,1);
M_.endo_names_long = cell(12,1);
M_.endo_names(1) = {'y'};
M_.endo_names_tex(1) = {'y'};
M_.endo_names_long(1) = {'y'};
M_.endo_names(2) = {'c'};
M_.endo_names_tex(2) = {'c'};
M_.endo_names_long(2) = {'c'};
M_.endo_names(3) = {'r'};
M_.endo_names_tex(3) = {'r'};
M_.endo_names_long(3) = {'r'};
M_.endo_names(4) = {'pi'};
M_.endo_names_tex(4) = {'pi'};
M_.endo_names_long(4) = {'pi'};
M_.endo_names(5) = {'w'};
M_.endo_names_tex(5) = {'w'};
M_.endo_names_long(5) = {'w'};
M_.endo_names(6) = {'z'};
M_.endo_names_tex(6) = {'z'};
M_.endo_names_long(6) = {'z'};
M_.endo_names(7) = {'h'};
M_.endo_names_tex(7) = {'h'};
M_.endo_names_long(7) = {'h'};
M_.endo_names(8) = {'k'};
M_.endo_names_tex(8) = {'k'};
M_.endo_names_long(8) = {'k'};
M_.endo_names(9) = {'i'};
M_.endo_names_tex(9) = {'i'};
M_.endo_names_long(9) = {'i'};
M_.endo_names(10) = {'mc'};
M_.endo_names_tex(10) = {'mc'};
M_.endo_names_long(10) = {'mc'};
M_.endo_names(11) = {'a'};
M_.endo_names_tex(11) = {'a'};
M_.endo_names_long(11) = {'a'};
M_.endo_names(12) = {'g'};
M_.endo_names_tex(12) = {'g'};
M_.endo_names_long(12) = {'g'};
M_.endo_partitions = struct();
M_.param_names = cell(17,1);
M_.param_names_tex = cell(17,1);
M_.param_names_long = cell(17,1);
M_.param_names(1) = {'beta'};
M_.param_names_tex(1) = {'beta'};
M_.param_names_long(1) = {'beta'};
M_.param_names(2) = {'alpha'};
M_.param_names_tex(2) = {'alpha'};
M_.param_names_long(2) = {'alpha'};
M_.param_names(3) = {'delta'};
M_.param_names_tex(3) = {'delta'};
M_.param_names_long(3) = {'delta'};
M_.param_names(4) = {'sigmaC'};
M_.param_names_tex(4) = {'sigmaC'};
M_.param_names_long(4) = {'sigmaC'};
M_.param_names(5) = {'sigmaL'};
M_.param_names_tex(5) = {'sigmaL'};
M_.param_names_long(5) = {'sigmaL'};
M_.param_names(6) = {'gy'};
M_.param_names_tex(6) = {'gy'};
M_.param_names_long(6) = {'gy'};
M_.param_names(7) = {'rho_r'};
M_.param_names_tex(7) = {'rho\_r'};
M_.param_names_long(7) = {'rho_r'};
M_.param_names(8) = {'phi_r'};
M_.param_names_tex(8) = {'phi\_r'};
M_.param_names_long(8) = {'phi_r'};
M_.param_names(9) = {'phi_y'};
M_.param_names_tex(9) = {'phi\_y'};
M_.param_names_long(9) = {'phi_y'};
M_.param_names(10) = {'theta_p'};
M_.param_names_tex(10) = {'theta\_p'};
M_.param_names_long(10) = {'theta_p'};
M_.param_names(11) = {'rho_a'};
M_.param_names_tex(11) = {'rho\_a'};
M_.param_names_long(11) = {'rho_a'};
M_.param_names(12) = {'rho_g'};
M_.param_names_tex(12) = {'rho\_g'};
M_.param_names_long(12) = {'rho_g'};
M_.param_names(13) = {'R'};
M_.param_names_tex(13) = {'R'};
M_.param_names_long(13) = {'R'};
M_.param_names(14) = {'Y'};
M_.param_names_tex(14) = {'Y'};
M_.param_names_long(14) = {'Y'};
M_.param_names(15) = {'Z'};
M_.param_names_tex(15) = {'Z'};
M_.param_names_long(15) = {'Z'};
M_.param_names(16) = {'C'};
M_.param_names_tex(16) = {'C'};
M_.param_names_long(16) = {'C'};
M_.param_names(17) = {'I'};
M_.param_names_tex(17) = {'I'};
M_.param_names_long(17) = {'I'};
M_.param_partitions = struct();
M_.exo_det_nbr = 0;
M_.exo_nbr = 3;
M_.endo_nbr = 12;
M_.param_nbr = 17;
M_.orig_endo_nbr = 12;
M_.aux_vars = [];
M_.Sigma_e = zeros(3, 3);
M_.Correlation_matrix = eye(3, 3);
M_.H = 0;
M_.Correlation_matrix_ME = 1;
M_.sigma_e_is_diagonal = true;
M_.det_shocks = [];
M_.surprise_shocks = [];
M_.learnt_shocks = [];
M_.learnt_endval = [];
M_.heteroskedastic_shocks.Qvalue_orig = [];
M_.heteroskedastic_shocks.Qscale_orig = [];
M_.matched_irfs = {};
M_.matched_irfs_weights = {};
options_.linear = true;
options_.block = false;
options_.bytecode = false;
options_.use_dll = false;
options_.ramsey_policy = false;
options_.discretionary_policy = false;
M_.nonzero_hessian_eqs = [];
M_.hessian_eq_zero = isempty(M_.nonzero_hessian_eqs);
M_.eq_nbr = 12;
M_.ramsey_orig_eq_nbr = 0;
M_.ramsey_orig_endo_nbr = 0;
M_.set_auxiliary_variables = exist(['./+' M_.fname '/set_auxiliary_variables.m'], 'file') == 2;
M_.epilogue_names = {};
M_.epilogue_var_list_ = {};
M_.orig_maximum_endo_lag = 1;
M_.orig_maximum_endo_lead = 1;
M_.orig_maximum_exo_lag = 0;
M_.orig_maximum_exo_lead = 0;
M_.orig_maximum_exo_det_lag = 0;
M_.orig_maximum_exo_det_lead = 0;
M_.orig_maximum_lag = 1;
M_.orig_maximum_lead = 1;
M_.orig_maximum_lag_with_diffs_expanded = 1;
M_.lead_lag_incidence = [
 1 6 0;
 0 7 18;
 2 8 0;
 0 9 19;
 0 10 0;
 0 11 20;
 0 12 0;
 3 13 0;
 0 14 0;
 0 15 0;
 4 16 0;
 5 17 0;]';
M_.nstatic = 4;
M_.nfwrd   = 3;
M_.npred   = 5;
M_.nboth   = 0;
M_.nsfwrd   = 3;
M_.nspred   = 5;
M_.ndynamic   = 8;
M_.dynamic_tmp_nbr = [0; 0; 0; 0; ];
M_.equations_tags = {
  1 , 'name' , '1' ;
  2 , 'name' , 'w' ;
  3 , 'name' , '3' ;
  4 , 'name' , '4' ;
  5 , 'name' , 'y' ;
  6 , 'name' , 'mc' ;
  7 , 'name' , '7' ;
  8 , 'name' , 'pi' ;
  9 , 'name' , '9' ;
  10 , 'name' , 'r' ;
  11 , 'name' , 'a' ;
  12 , 'name' , 'g' ;
};
M_.mapping.y.eqidx = [5 9 10 ];
M_.mapping.c.eqidx = [1 2 9 ];
M_.mapping.r.eqidx = [1 3 10 ];
M_.mapping.pi.eqidx = [1 3 8 10 ];
M_.mapping.w.eqidx = [2 6 7 ];
M_.mapping.z.eqidx = [3 6 7 ];
M_.mapping.h.eqidx = [2 5 7 ];
M_.mapping.k.eqidx = [4 5 7 ];
M_.mapping.i.eqidx = [4 9 ];
M_.mapping.mc.eqidx = [6 8 ];
M_.mapping.a.eqidx = [5 6 11 ];
M_.mapping.g.eqidx = [9 12 ];
M_.mapping.e_a.eqidx = [11 ];
M_.mapping.e_g.eqidx = [12 ];
M_.mapping.e_r.eqidx = [10 ];
M_.static_and_dynamic_models_differ = false;
M_.has_external_function = false;
M_.block_structure.time_recursive = false;
M_.block_structure.block(1).Simulation_Type = 1;
M_.block_structure.block(1).endo_nbr = 2;
M_.block_structure.block(1).mfs = 2;
M_.block_structure.block(1).equation = [ 11 12];
M_.block_structure.block(1).variable = [ 11 12];
M_.block_structure.block(1).is_linear = true;
M_.block_structure.block(1).NNZDerivatives = 4;
M_.block_structure.block(1).bytecode_jacob_cols_to_sparse = [1 2 3 4 ];
M_.block_structure.block(2).Simulation_Type = 8;
M_.block_structure.block(2).endo_nbr = 10;
M_.block_structure.block(2).mfs = 10;
M_.block_structure.block(2).equation = [ 6 8 9 2 3 4 5 7 10 1];
M_.block_structure.block(2).variable = [ 5 10 9 7 3 8 1 6 4 2];
M_.block_structure.block(2).is_linear = true;
M_.block_structure.block(2).NNZDerivatives = 34;
M_.block_structure.block(2).bytecode_jacob_cols_to_sparse = [5 6 7 11 12 13 14 15 16 17 18 19 20 28 29 30 ];
M_.block_structure.block(1).g1_sparse_rowval = int32([]);
M_.block_structure.block(1).g1_sparse_colval = int32([]);
M_.block_structure.block(1).g1_sparse_colptr = int32([]);
M_.block_structure.block(2).g1_sparse_rowval = int32([9 6 7 8 9 1 4 8 1 2 3 6 4 7 8 5 9 10 6 3 7 9 1 8 2 9 3 4 10 5 2 5 10 10 ]);
M_.block_structure.block(2).g1_sparse_colval = int32([5 6 6 6 7 11 11 11 12 12 13 13 14 14 14 15 15 15 16 17 17 17 18 18 19 19 20 20 20 28 29 29 29 30 ]);
M_.block_structure.block(2).g1_sparse_colptr = int32([1 1 1 1 1 2 5 6 6 6 6 9 11 13 16 19 20 23 25 27 30 30 30 30 30 30 30 30 31 34 35 ]);
M_.block_structure.variable_reordered = [ 11 12 5 10 9 7 3 8 1 6 4 2];
M_.block_structure.equation_reordered = [ 11 12 6 8 9 2 3 4 5 7 10 1];
M_.block_structure.incidence(1).lead_lag = -1;
M_.block_structure.incidence(1).sparse_IM = [
 4 8;
 5 8;
 7 8;
 10 1;
 10 3;
 11 11;
 12 12;
];
M_.block_structure.incidence(2).lead_lag = 0;
M_.block_structure.incidence(2).sparse_IM = [
 1 2;
 1 3;
 2 2;
 2 5;
 2 7;
 3 3;
 4 8;
 4 9;
 5 1;
 5 7;
 5 11;
 6 5;
 6 6;
 6 10;
 6 11;
 7 5;
 7 6;
 7 7;
 8 4;
 8 10;
 9 1;
 9 2;
 9 9;
 9 12;
 10 1;
 10 3;
 10 4;
 11 11;
 12 12;
];
M_.block_structure.incidence(3).lead_lag = 1;
M_.block_structure.incidence(3).sparse_IM = [
 1 2;
 1 4;
 3 4;
 3 6;
 8 4;
];
M_.block_structure.dyn_tmp_nbr = 0;
M_.state_var = [11 12 3 8 1 ];
M_.maximum_lag = 1;
M_.maximum_lead = 1;
M_.maximum_endo_lag = 1;
M_.maximum_endo_lead = 1;
oo_.steady_state = zeros(12, 1);
M_.maximum_exo_lag = 0;
M_.maximum_exo_lead = 0;
oo_.exo_steady_state = zeros(3, 1);
M_.params = NaN(17, 1);
M_.endo_trends = struct('deflator', cell(12, 1), 'log_deflator', cell(12, 1), 'growth_factor', cell(12, 1), 'log_growth_factor', cell(12, 1));
M_.NNZDerivatives = [44; 0; -1; ];
M_.dynamic_g1_sparse_rowval = int32([10 10 4 5 7 11 12 5 9 10 1 2 9 1 3 10 8 10 2 6 7 6 7 2 5 7 4 4 9 6 8 5 6 11 9 12 1 1 3 8 3 11 12 10 ]);
M_.dynamic_g1_sparse_colval = int32([1 3 8 8 8 11 12 13 13 13 14 14 14 15 15 15 16 16 17 17 17 18 18 19 19 19 20 21 21 22 22 23 23 23 24 24 26 28 28 28 30 37 38 39 ]);
M_.dynamic_g1_sparse_colptr = int32([1 2 2 3 3 3 3 3 6 6 6 7 8 11 14 17 19 22 24 27 28 30 32 35 37 37 38 38 41 41 42 42 42 42 42 42 42 43 44 45 ]);
M_.dynamic_g2_sparse_indices = int32([]);
M_.lhs = {
'sigmaC*(c(1)-c)'; 
'w'; 
'(r-pi(1))*R'; 
'delta*i'; 
'y'; 
'mc'; 
'w+h'; 
'pi'; 
'y*Y'; 
'r'; 
'a'; 
'g'; 
};
M_.static_tmp_nbr = [0; 0; 0; 0; ];
M_.block_structure_stat.block(1).Simulation_Type = 3;
M_.block_structure_stat.block(1).endo_nbr = 1;
M_.block_structure_stat.block(1).mfs = 1;
M_.block_structure_stat.block(1).equation = [ 11];
M_.block_structure_stat.block(1).variable = [ 11];
M_.block_structure_stat.block(2).Simulation_Type = 3;
M_.block_structure_stat.block(2).endo_nbr = 1;
M_.block_structure_stat.block(2).mfs = 1;
M_.block_structure_stat.block(2).equation = [ 12];
M_.block_structure_stat.block(2).variable = [ 12];
M_.block_structure_stat.block(3).Simulation_Type = 6;
M_.block_structure_stat.block(3).endo_nbr = 2;
M_.block_structure_stat.block(3).mfs = 2;
M_.block_structure_stat.block(3).equation = [ 10 1];
M_.block_structure_stat.block(3).variable = [ 3 4];
M_.block_structure_stat.block(4).Simulation_Type = 3;
M_.block_structure_stat.block(4).endo_nbr = 1;
M_.block_structure_stat.block(4).mfs = 1;
M_.block_structure_stat.block(4).equation = [ 8];
M_.block_structure_stat.block(4).variable = [ 10];
M_.block_structure_stat.block(5).Simulation_Type = 3;
M_.block_structure_stat.block(5).endo_nbr = 1;
M_.block_structure_stat.block(5).mfs = 1;
M_.block_structure_stat.block(5).equation = [ 3];
M_.block_structure_stat.block(5).variable = [ 6];
M_.block_structure_stat.block(6).Simulation_Type = 3;
M_.block_structure_stat.block(6).endo_nbr = 1;
M_.block_structure_stat.block(6).mfs = 1;
M_.block_structure_stat.block(6).equation = [ 6];
M_.block_structure_stat.block(6).variable = [ 5];
M_.block_structure_stat.block(7).Simulation_Type = 6;
M_.block_structure_stat.block(7).endo_nbr = 5;
M_.block_structure_stat.block(7).mfs = 5;
M_.block_structure_stat.block(7).equation = [ 4 5 7 9 2];
M_.block_structure_stat.block(7).variable = [ 8 1 7 9 2];
M_.block_structure_stat.variable_reordered = [ 11 12 3 4 10 6 5 8 1 7 9 2];
M_.block_structure_stat.equation_reordered = [ 11 12 10 1 8 3 6 4 5 7 9 2];
M_.block_structure_stat.incidence.sparse_IM = [
 1 3;
 1 4;
 2 2;
 2 5;
 2 7;
 3 3;
 3 4;
 3 6;
 4 8;
 4 9;
 5 1;
 5 7;
 5 8;
 5 11;
 6 5;
 6 6;
 6 10;
 6 11;
 7 5;
 7 6;
 7 7;
 7 8;
 8 4;
 8 10;
 9 1;
 9 2;
 9 9;
 9 12;
 10 3;
 10 4;
 11 11;
 12 12;
];
M_.block_structure_stat.tmp_nbr = 0;
M_.block_structure_stat.block(1).g1_sparse_rowval = int32([1 ]);
M_.block_structure_stat.block(1).g1_sparse_colval = int32([1 ]);
M_.block_structure_stat.block(1).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure_stat.block(2).g1_sparse_rowval = int32([1 ]);
M_.block_structure_stat.block(2).g1_sparse_colval = int32([1 ]);
M_.block_structure_stat.block(2).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure_stat.block(3).g1_sparse_rowval = int32([1 2 1 2 ]);
M_.block_structure_stat.block(3).g1_sparse_colval = int32([1 1 2 2 ]);
M_.block_structure_stat.block(3).g1_sparse_colptr = int32([1 3 5 ]);
M_.block_structure_stat.block(4).g1_sparse_rowval = int32([1 ]);
M_.block_structure_stat.block(4).g1_sparse_colval = int32([1 ]);
M_.block_structure_stat.block(4).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure_stat.block(5).g1_sparse_rowval = int32([1 ]);
M_.block_structure_stat.block(5).g1_sparse_colval = int32([1 ]);
M_.block_structure_stat.block(5).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure_stat.block(6).g1_sparse_rowval = int32([1 ]);
M_.block_structure_stat.block(6).g1_sparse_colval = int32([1 ]);
M_.block_structure_stat.block(6).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure_stat.block(7).g1_sparse_rowval = int32([1 2 3 2 4 2 3 5 1 4 4 5 ]);
M_.block_structure_stat.block(7).g1_sparse_colval = int32([1 1 1 2 2 3 3 3 4 4 5 5 ]);
M_.block_structure_stat.block(7).g1_sparse_colptr = int32([1 4 6 9 11 13 ]);
M_.static_g1_sparse_rowval = int32([5 9 2 9 1 3 10 1 3 8 10 2 6 7 3 6 7 2 5 7 4 5 7 4 9 6 8 5 6 11 9 12 ]);
M_.static_g1_sparse_colval = int32([1 1 2 2 3 3 3 4 4 4 4 5 5 5 6 6 6 7 7 7 8 8 8 9 9 10 10 11 11 11 12 12 ]);
M_.static_g1_sparse_colptr = int32([1 3 5 8 12 15 18 21 24 26 28 31 33 ]);
close all;
M_.params(2) = 0.36;
alpha = M_.params(2);
M_.params(1) = 0.99;
beta = M_.params(1);
M_.params(3) = 0.025;
delta = M_.params(3);
M_.params(4) = 1;
sigmaC = M_.params(4);
M_.params(5) = 2;
sigmaL = M_.params(5);
M_.params(6) = 0.2;
gy = M_.params(6);
M_.params(10) = .75;
theta_p = M_.params(10);
epsilon_p	= 10;				
M_.params(7) = .7;
rho_r = M_.params(7);
M_.params(9) = .125;
phi_y = M_.params(9);
M_.params(8) = 1.5;
phi_r = M_.params(8);
M_.params(11) = 0.95;
rho_a = M_.params(11);
M_.params(12) = 0.95;
rho_g = M_.params(12);
M_.params(13) = 1/M_.params(1);
R = M_.params(13);
M_.params(15) = 1/M_.params(1)-(1-M_.params(3));
Z = M_.params(15);
H			= 1/3;				
MC			= (epsilon_p-1)/epsilon_p;
K			= H*(Z/(alpha*MC))^(1/(alpha-1));
M_.params(14) = K^M_.params(2)*H^(1-M_.params(2));
Y = M_.params(14);
M_.params(16) = (1-M_.params(6))*M_.params(14)-M_.params(3)*K;
C = M_.params(16);
M_.params(17) = M_.params(3)*K;
I = M_.params(17);
W			= (1-alpha)*MC*Y/H;
DELTAC		= C^-sigmaC;
chi			= DELTAC*W/(H^(1/sigmaL));
oo_.dr.eigval = check(M_,options_,oo_);
steady;
%
% SHOCKS instructions
%
M_.exo_det_length = 0;
M_.Sigma_e(1, 1) = (.01)^2;
M_.Sigma_e(2, 2) = (.01)^2;
M_.Sigma_e(3, 3) = (.01)^2;
options_.irf = 50;
options_.order = 1;
var_list_ = {};
[info, oo_, options_, M_] = stoch_simul(M_, options_, oo_, var_list_);


oo_.time = toc(tic0);
disp(['Total computing time : ' dynsec2hms(oo_.time) ]);
if ~exist([M_.dname filesep 'Output'],'dir')
    mkdir(M_.dname,'Output');
end
save([M_.dname filesep 'Output' filesep 'logRBCNK_results.mat'], 'oo_', 'M_', 'options_');
if exist('estim_params_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'logRBCNK_results.mat'], 'estim_params_', '-append');
end
if exist('bayestopt_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'logRBCNK_results.mat'], 'bayestopt_', '-append');
end
if exist('dataset_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'logRBCNK_results.mat'], 'dataset_', '-append');
end
if exist('estimation_info', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'logRBCNK_results.mat'], 'estimation_info', '-append');
end
if exist('dataset_info', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'logRBCNK_results.mat'], 'dataset_info', '-append');
end
if exist('oo_recursive_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'logRBCNK_results.mat'], 'oo_recursive_', '-append');
end
if exist('options_mom_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'logRBCNK_results.mat'], 'options_mom_', '-append');
end
if ~isempty(lastwarn)
  disp('Note: warning(s) encountered in MATLAB/Octave code')
end
